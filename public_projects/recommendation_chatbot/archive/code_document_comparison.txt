=== 코드와 문서 비교 분석 요청 ===

Claude가 작성한 DATABASE_IMPLEMENTATION_GUIDE.md와 실제 프로젝트 코드(data_structure.py)를 비교 검증해주세요.

## 실제 코드 (data_structure.py)의 주요 클래스

1. **UserInput**
   - text: str
   - user_id: str  
   - timestamp: datetime
   - session_id: str

2. **NaviyamShop**
   - id: int
   - name: str
   - category: str
   - is_good_influence_shop: bool
   - is_food_card_shop: str (⚠️ 문서에는 BOOLEAN으로 정의)
   - address: str
   - open_hour: str
   - close_hour: str
   - break_start_hour: Optional[str]
   - break_end_hour: Optional[str]
   - current_status: str
   - owner_message: Optional[str]
   - ordinary_discount: bool

3. **NaviyamMenu**
   - id: int
   - shop_id: int
   - name: str
   - price: int
   - description: Optional[str]
   - category: Optional[str]
   - is_popular: bool
   - options: List[Dict]

4. **NaviyamCoupon**
   - id: str
   - name: str
   - description: str
   - amount: int
   - discount_rate: float
   - min_amount: Optional[int]
   - usage_type: str
   - target: List[str]
   - applicable_shops: List[int]
   - valid_from: Optional[str]
   - valid_until: Optional[str]

5. **UserProfile** (⚠️ 문서의 users 테이블과 차이)
   - user_id: str
   - preferred_categories: List[str]
   - average_budget: Optional[int]
   - favorite_shops: List[int]
   - recent_orders: List[Dict]
   - conversation_style: str
   - taste_preferences: Dict[str, float]
   - companion_patterns: List[str]
   - location_preferences: List[str]
   - good_influence_preference: float
   - interaction_count: int
   - data_completeness: float

6. **FoodcardUser** (⚠️ 문서에 없는 별도 클래스)
   - user_id: int
   - card_number: str
   - balance: int
   - status: str
   - target_age_group: str

7. **UserState** (⚠️ 문서에 없음)
   - strategy: str
   - data_completeness: float
   - interaction_count: int
   - last_interaction: datetime

8. **LearningData** (⚠️ 문서에 없음)
   - user_id: str
   - timestamp: datetime
   - extracted_entities: Dict
   - intent_confidence: float
   - food_preferences: List[str]
   - budget_patterns: List[int]
   - companion_patterns: List[str]
   - taste_preferences: Dict[str, float]
   - recommendations_provided: List[Dict]
   - user_selection: Optional[Dict]
   - user_feedback: Optional[str]
   - satisfaction_score: Optional[float]

## 문서의 주요 테이블 (DDL)

1. **shops 테이블**
   - is_food_card_shop BOOLEAN (⚠️ 코드에서는 str)
   - 위치 정보 필드들 (latitude, longitude, geom)
   - AI 점수 필드들 (popularity_score, quality_score)
   - 메타데이터 필드들

2. **menus 테이블**
   - nutrition_info JSONB (코드에 없음)
   - dietary_tags TEXT[] (코드에 없음)

3. **users 테이블**
   - 외부 ID, 플랫폼 정보
   - 인구통계, 주소 정보 
   - 급식카드 정보 통합 (코드에서는 FoodcardUser 별도)

## 주요 차이점

1. **데이터 타입 불일치**
   - is_food_card_shop: 문서(BOOLEAN) vs 코드(str)

2. **구조적 차이**
   - UserProfile vs users 테이블: 코드에서 더 많은 개인화 필드
   - FoodcardUser: 코드에서 별도 클래스, 문서에서는 users에 통합

3. **누락된 클래스/테이블**
   - UserState, LearningData, NaviyamKnowledge (코드에만 존재)
   - conversations, recommendations_log 등 (문서에만 존재)

4. **필드 차이**
   - 코드의 UserProfile에 taste_preferences, companion_patterns 등 추가 필드
   - 문서의 shops에 위치정보, AI 점수 등 추가 필드

## 검증 요청사항

1. 이러한 차이점들이 의도적인 설계인지 실수인지 평가
2. 문서를 코드에 맞춰 수정해야 할 부분 지적
3. 코드를 문서에 맞춰 수정해야 할 부분 지적
4. 데이터 저장 정책이 실제 구현과 일치하는지 확인
5. 누락된 중요한 정보나 불일치 사항 추가 발견